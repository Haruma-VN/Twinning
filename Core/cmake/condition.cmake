# common condition

# system
set(M_system_windows 0)
set(M_system_linux   0)
set(M_system_macos   0)
set(M_system_android 0)
set(M_system_ios     0)
if(CMAKE_SYSTEM_NAME MATCHES "Windows")
	set(M_system_windows 1)
endif()
if(CMAKE_SYSTEM_NAME MATCHES "Linux")
	set(M_system_linux 1)
endif()
if(CMAKE_SYSTEM_NAME MATCHES "Darwin")
	set(M_system_macos 1)
endif()
if(CMAKE_SYSTEM_NAME MATCHES "Android")
	set(M_system_android 1)
endif()
if(CMAKE_SYSTEM_NAME MATCHES "iOS")
	set(M_system_ios 1)
endif()

# compiler
set(M_compiler_msvc  0)
set(M_compiler_clang 0)
if(CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
	set(M_compiler_msvc 1)
endif()
if(CMAKE_CXX_COMPILER_ID MATCHES "Clang")
	set(M_compiler_clang 1)
endif()

# build
set(M_build_debug   0)
set(M_build_release 0)
if(CMAKE_BUILD_TYPE MATCHES "Debug")
	set(M_build_debug 1)
endif()
if(CMAKE_BUILD_TYPE MATCHES "Release")
	set(M_build_release 1)
endif()
if(CMAKE_BUILD_TYPE MATCHES "MinSizeRel")
	set(M_build_release 1)
endif()
if(CMAKE_BUILD_TYPE MATCHES "RelWithDebInfo")
	set(M_build_debug 1)
	set(M_build_release 1)
endif()

# check
message("${CMAKE_SYSTEM_NAME} & ${CMAKE_CXX_COMPILER_ID} & ${CMAKE_BUILD_TYPE}")
if(NOT (M_system_windows OR M_system_linux OR M_system_macos OR M_system_android OR M_system_ios))
	message(FATAL_ERROR "ERROR : system must be Windows or Linux or Darwin or Android or iOS")
endif()
if(NOT (M_compiler_msvc OR M_compiler_clang))
	message(FATAL_ERROR "ERROR : compiler must be MSVC or Clang")
endif()
if(NOT (M_build_debug OR M_build_release))
	message(FATAL_ERROR "ERROR : build must be Debug or Release or RelWithDebInfo or MinSizeRel")
endif()
